name: Client CI/CD

on:
  push:
    branches: [main]
    paths:
      - "client/**"
  pull_request:
    paths:
      - "client/**"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: "yarn"
          cache-dependency-path: client/yarn.lock

      - name: Install dependencies
        working-directory: client
        run: yarn install --frozen-lockfile

      - name: Build Next.js app
        working-directory: client
        run: yarn build

      - name: Lint
        working-directory: client
        run: yarn lint

      - name: Build Docker image
        working-directory: client
        run: |
          docker buildx build . \
            --build-arg NEXT_PUBLIC_FIREBASE_API_KEY=${{ secrets.NEXT_PUBLIC_FIREBASE_API_KEY }} \
            --build-arg NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN=${{ secrets.NEXT_PUBLIC_FIREBASE_AUTH_DOMAIN }} \
            --build-arg NEXT_PUBLIC_FIREBASE_PROJECT_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_PROJECT_ID }} \
            --build-arg NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET=${{ secrets.NEXT_PUBLIC_FIREBASE_STORAGE_BUCKET }} \
            --build-arg NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_MESSAGING_SENDER_ID }} \
            --build-arg NEXT_PUBLIC_FIREBASE_APP_ID=${{ secrets.NEXT_PUBLIC_FIREBASE_APP_ID }} \
            -t e-commerce-client

      - name: Push image to Docker Hub
        if: github.ref == 'refs/heads/main'
        env:
          IMAGE_NAME: e-commerce-client
          USERNAME: ${{ secrets.DOCKER_USERNAME }}
        run: |
          VERSION_TAG=${GITHUB_SHA::7}  # short commit hash (e.g., 4a1b2c3)
          echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "$USERNAME" --password-stdin

          # Tag images with both version and 'latest'
          docker tag $IMAGE_NAME $USERNAME/$IMAGE_NAME:$VERSION_TAG
          docker tag $IMAGE_NAME $USERNAME/$IMAGE_NAME:latest

          # Push both tags
          docker push $USERNAME/$IMAGE_NAME:$VERSION_TAG
          docker push $USERNAME/$IMAGE_NAME:latest

      - name: Trigger Render redeploy
        if: github.ref == 'refs/heads/main'
        run: |
          curl -X POST ${{ secrets.RENDER_DEPLOY_HOOK }}
